"use strict";var tooltipList=[];class InputField{constructor(t,e="input"){this.type=e,this.dom_invalid_feedback=document.getElementById("invalid-feedback-"+t),this.dom_input=document.querySelector(e+"#"+t),this.dom_form=document.getElementById("select_stations_form")}make_valid(){this.dom_input.setCustomValidity(""),this.dom_invalid_feedback.display="none",this.dom_invalid_feedback.querySelector("ul").innerHTML=""}make_invalid(t){this.dom_form.classList.add("was-validated"),this.dom_invalid_feedback.display="block",this.dom_invalid_feedback.querySelector("ul").innerHTML+="<li>"+t+"</li>",this.dom_input.setCustomValidity(this.dom_invalid_feedback.textContent)}is_valid(){return this.dom_input.checkValidity()}get_value(){return"select"==this.type&&this.dom_input.multiple?[...this.dom_input.selectedOptions].map(t=>t.value):this.dom_input.value}}class RheiKlimMap{constructor(){this.get_stations_meta(),this.input_stids=new InputField("station_ids","textarea"),this.input_period=new InputField("period","select"),this.input_para=new InputField("parameter","select"),this.buttons={colapse_card_map:document.getElementById("btn_collapse_accordion_map"),colapse_card_manualy:document.getElementById("btn_collapse_accordion_manualy"),color_selection:document.getElementById("btn_color_selection"),remove_coloring:document.getElementById("btn_remove_coloring"),filter_stations:document.getElementById("btn_filter_stations"),remove_filter:document.getElementById("btn_remove_filter"),add_plots:document.getElementById("btn_add_plots")},L.Icon.Default.prototype.options.imagePath=location.origin,L.Icon.Default.prototype.options.shadowUrl="/static/RheiKlim/img/Leaflet-Marker-shadow.png",this.IconDefault=L.Icon.Default.extend({options:{iconUrl:"/static/RheiKlim/img/marker-icon-blue.png",iconRetinaUrl:"/static/RheiKlim/img/marker-icon-2x-blue.png"}}),this.IconUnselect=L.Icon.Default.extend({options:{iconUrl:"/static/RheiKlim/img/marker-icon-red.png",iconRetinaUrl:"/static/RheiKlim/img/marker-icon-2x-red.png"}}),this.IconSelect=L.Icon.Default.extend({options:{iconUrl:"/static/RheiKlim/img/marker-icon-green.png",iconRetinaUrl:"/static/RheiKlim/img/marker-icon-2x-green.png"}}),this.coloring_active=!1,this.filtering_active=!1,this.legend=new(L.Control.extend({onAdd:t=>{let e=L.DomUtil.create("div","legend container-fluid");e.innerHTML=`<h3>${gettext("Legend")}</h3>`;let i=[this.IconSelect,this.IconUnselect],s=[gettext("selected"),gettext("not select")];for(let t=0;t<2;t++){let n=L.DomUtil.create("div","row justify-content-right"),a=L.DomUtil.create("div","col-auto pr-0"),o=(new i[t]).createIcon();o.style="",o.classList+="img-fluid marker-legend ",a.appendChild(o),n.appendChild(a);let l=L.DomUtil.create("div","col");l.innerHTML+=`<b>${s[t]}</b>`,n.appendChild(l),e.appendChild(n)}return e}})),this.create_basemap(),this.load_stations_to_map(),this.station_data={}}addButonEventListeners(){this.buttons.color_selection.addEventListener("click",t=>{this.apply_coloring(),t.target.textContent=gettext("Update Coloring"),this.buttons.remove_coloring.classList.remove("invisible")}),this.buttons.remove_coloring.addEventListener("click",t=>{this.remove_coloring(),this.buttons.color_selection.textContent=gettext("Color Selection"),t.target.classList.add("invisible")}),this.buttons.filter_stations.addEventListener("click",t=>{this.apply_filter(),t.target.textContent=gettext("Update Filter"),this.buttons.remove_filter.classList.remove("invisible")}),this.buttons.remove_filter.addEventListener("click",t=>{this.remove_filter(),this.buttons.filter_stations.textContent=gettext("Filter Selection"),t.target.classList.add("invisible")}),this.buttons.add_plots.addEventListener("click",t=>{this.add_plots(),t.target.value=gettext("add new plots")})}addInputEventListeners(){this.input_stids.dom_input.addEventListener("change",t=>{this.check_stations_input(),this.update_coloring(),this.update_filter()})}addEventListeners(){this.addButonEventListeners(),this.addInputEventListeners()}create_basemap(){this.map=L.map(document.getElementById("map")).setView([51.351,10.459],6),L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',maxZoom:20,tilesextent:[7.5,47.27,10.5,55.06]}).addTo(this.map),this.map_scale=L.control.scale(),this.map_scale.addTo(this.map)}get_stations_meta(){this.stations_meta=JSON.parse(document.getElementById("stations_meta").textContent),this.station_ids=[];for(let t of this.stations_meta.features)this.station_ids.push(t.properties.pk)}get_station_data(t){if(t in this.station_data)return this.station_data[t];$.ajax}load_stations_to_map(t=(t=>!0)){if(null!=this.lmarkers&&this.lmarkers.clearLayers(),this.lmarkers=L.markerClusterGroup(),this.lmarkers.addLayer(L.geoJSON(this.stations_meta,{filter:t})),this.lmarkers=this.lmarkers.bindPopup(t=>{let e=t.feature.properties,i=t.feature.properties.pk,s=this.is_selected(i)?gettext("unselect"):gettext("select"),n=gettext("Add this station to the selected stations list on the right"),a=gettext("Download all the plots for this station as PDF."),o=gettext("Betreiber"),l=gettext("Name"),r=`<div class="container gx-0 pb-2" id="popup_stid_${i}">                    <h6 style="float: left">${i}</h6><br>                    <table>                    <tr><td><b>${l}:</b></td><td> ${e.name}</td><br>                    <tr><td><b>${o}:</b></td><td> ${e.operator}</td>                    </tr></table></div>                    <div class="container gx-0"><div class="row justify-content-center"><div class="col">                        <button class="btn btn-primary rm-3" onclick="button_select_station('${i}', event)"                             data-bs-toggle="tooltip" data-bs-placement="top" data-bs-container="body" data-bs-trigger="hover"                            data-bs-title="${n}">${s}</button></div>                        <div class="col gx-0">                            <a class="btn btn-primary" href="/static/RheiKlim/PDF/A4_Ann_Trends_${i}.pdf" download style="color:#FFFFFF"                                 data-bs-toggle="tooltip" data-bs-placement="top" data-bs-container="body" data-bs-trigger="hover"                                 data-bs-title="${a}">                                <i class="bi bi-download"></i>                            </a>                    </div></div></div>`;return r},{minWidth:150}),this.lmarkers.on("click",()=>{tooltipList=tooltipList.filter(t=>t._element.isConnected),[...document.querySelectorAll('.leaflet-popup-content [data-bs-toggle="tooltip"]')].map(t=>tooltipList.push(new bootstrap.Tooltip(t)))}),this.lmarkers.getLayers().forEach(t=>{t.setIcon(new this.IconDefault)}),this.lmarkers.addTo(this.map),this.lmarkers.getLayers().length>1)this.map.fitBounds(this.lmarkers.getBounds(),{padding:[1,1]});else if(1==this.lmarkers.getLayers().length){let t=L.latLngBounds([this.lmarkers.getLayers()[0].getLatLng()]);this.map.fitBounds(t.pad(2),{padding:[1,1]})}this.markers={},this.lmarkers.getLayers().forEach(t=>{this.markers[t.feature.properties.pk]=t}),this.coloring_active&&this.apply_coloring()}apply_coloring(){this.coloring_active=!0;let t=this.get_selected_stations();this.lmarkers.getLayers().forEach(e=>{t.includes(e.feature.properties.pk)?e.setIcon(new this.IconSelect):e.setIcon(new this.IconUnselect)}),this.legend.addTo(this.map)}remove_coloring(){this.coloring_active=!1,this.lmarkers.getLayers().forEach(t=>{t.setIcon(new this.IconDefault)}),this.legend.remove()}update_coloring(){this.coloring_active&&this.apply_coloring()}apply_filter(){let t=this.get_selected_stations();this.filtering_active=!0;let e=t=>!1;t.length>0&&(e=(e=>t.includes(e.properties.pk)));let i=t=>e(t);this.load_stations_to_map(i=i)}remove_filter(){this.load_stations_to_map(),this.filtering_active=!1}update_filter(){this.filtering_active&&this.apply_filter()}add_plot(t,e,i){add_plot(t,e,i)}add_plots(){let t=this.get_paras(),e=this.get_periods(),i=this.get_selected_stations();i.forEach(i=>{t.forEach(t=>{e.forEach(e=>{this.add_plot(i=i,t=t,e=e)})})})}get_selected_stations(){let t=this.input_stids.get_value().split(",").map(t=>t.trim());return 1==t.length&""==t[0]?[]:t}get_periods(){return this.input_period.get_value()}get_paras(){return this.input_para.get_value()}is_selected(t){return this.get_selected_stations().includes(String(t))}select_station(t){this.check_stid(t)&&!this.get_selected_stations().includes(t)&&(0==this.input_stids.get_value().length?this.input_stids.dom_input.value=t:this.input_stids.dom_input.value+=", "+t,this.update_coloring(),this.update_filter(),this.check_stations_input())}unselect_station(t){let e=this.get_selected_stations();e.includes(t)&&(e.splice(e.indexOf(t),1),this.input_stids.dom_input.value=e.join(", "),this.update_coloring(),this.update_filter(),this.check_stations_input())}check_stid(t){return this.station_ids.includes(t)}check_stations_input(){this.input_stids.make_valid();let t=this.input_stids.get_value();if(0==t.length)return this.input_stids.make_invalid("You didn't select any station. Please enter a comma-seperated list of station IDs."),!1;if(!/^\s*\w+_(\d{1,5})\s*([,;]{1}\s*\w+_\d{1,5})*[\s,;]*$/.test(t))return this.input_stids.make_invalid("The given list of stations is not in the right pattern.<br>The Station Ids must be provided as a comma or semmicolon seperated list of IDs."),!1;let e=t.trim().replaceAll(";",",").replaceAll(/[,\s]+$/gm,"").split(",").map(t=>t.trim());e=Array.from(new Set(e));let i=[],s=[];for(let t of e)this.check_stid(t)?i.push(t):s.push(t);return s.length>0&&this.input_stids.make_invalid("The following Station Ids are not valid and should get removed: <br>"+s.join(", ")),this.input_stids.dom_input.value=e.join(", "),this.get_selected_stations().length>10&&this.input_stids.make_invalid("You are only able to select 10 stations at once. If you want to see more station plots please select them in batches. This means, adding 10 plots and then delete your selection and create a new one. Then add those stations plots."),this.input_stids.is_valid()}}const RheiKlimmap=new RheiKlimMap;let button_select_station=(t,e)=>{e.target.innerText==gettext("select")?(RheiKlimmap.select_station(t),e.target.innerText=gettext("unselect")):(RheiKlimmap.unselect_station(t),e.target.innerText=gettext("select"))};RheiKlimmap.addEventListeners();