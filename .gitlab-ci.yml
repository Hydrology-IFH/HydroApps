# based on https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Django.gitlab-ci.yml

variables:
    HYDROAPPS_SECRET_KEY: 'very_long_secret_key123'
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres
    POSTGRES_PORT: 5432
    HYDROAPPS_DB_HOST: hydroapps
    HYDROAPPS_DB_DATABASE: hydroapps
    WEATHERDB_DB_HOST: weatherdb
    WEATHERDB_DB_DATABASE: weatherdb
    WEATHERDB_DB_PORT: $POSTGRES_PORT
    WEATHERDB_DB_USER: $POSTGRES_USER
    WEATHERDB_DB_PASSWORD: $POSTGRES_PASSWORD
    WEATHERDB_LOGGING_HANDLER: console
    WEATHERDB_LOGGING_LEVEL: DEBUG

workflow:
  auto_cancel:
    on_new_commit: interruptible

stages:
    - build_test_image
    - test

build_test_image:
    stage: build_test_image
    rules:
        - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
        - if: $CI_COMMIT_BRANCH == "master"
    script:
        - unset DOCKER_HOST
        - echo "$CI_REGISTRY_PASSWORD" | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
        - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH || true
        - docker build --cache-from $CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH
          -t $CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH -f Dockerfile.test .
        - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH
    tags:
        - shell

django-tests:
    stage: test
    image: $CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH
    rules: !reference [build_test_image, rules]
    dependencies:
      - build_test_image
    services:
        - name: postgis/postgis
          alias: hydroapps
          variables:
              POSTGRES_DB: $HYDROAPPS_DB_DATABASE
        - name: postgis/postgis
          alias: weatherdb
          variables:
              POSTGRES_DB: $WEATHERDB_DB_DATABASE
    before_script:
        - cp secretSettings_HydroApps.py.test secretSettings_HydroApps.py
        - mkdir static_data
        - cd front-end && npm ci && npm run build && cd ../
        - uv sync
        - uv run weatherdb create-db-schema
        - uv run python3 manage.py migrate
        - uv run python3 manage.py collectstatic --noinput
    script:
        - uv run python3 manage.py test my_auth weatherdb RheiKlim kombstra sri_bw sfi_demo
    interruptible: true
    cache:
        paths:
        - ~/.cache/pip/
        - front-end/node_modules/
        - .venv/
    tags:
        - docker