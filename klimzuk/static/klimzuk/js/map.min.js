"use strict";class InputField{constructor(name,type="input"){this.type=type,this.dom_invalid_feedback=document.getElementById("invalid-feedback-"+name),this.dom_input=document.querySelector(type+"#"+name),this.dom_form=document.getElementById("select_stations_form")}make_valid(){this.dom_input.setCustomValidity(""),this.dom_invalid_feedback.display="none",this.dom_invalid_feedback.querySelector("ul").innerHTML=""}make_invalid(msg){this.dom_form.classList.add("was-validated"),this.dom_invalid_feedback.display="block",this.dom_invalid_feedback.querySelector("ul").innerHTML+="<li>"+msg+"</li>",this.dom_input.setCustomValidity(this.dom_invalid_feedback.textContent)}is_valid(){return this.dom_input.checkValidity()}get_value(){return"select"==this.type&&this.dom_input.multiple?[...this.dom_input.selectedOptions].map(option=>option.value):this.dom_input.value}}class KlimZukMap{constructor(){this.get_stations_meta(),this.input_stids=new InputField("station_ids","textarea"),this.input_period=new InputField("period","select"),this.input_para=new InputField("parameter","select"),this.buttons={colapse_card_map:document.getElementById("btn_collapse_accordion_map"),colapse_card_manualy:document.getElementById("btn_collapse_accordion_manualy"),color_selection:document.getElementById("btn_color_selection"),remove_coloring:document.getElementById("btn_remove_coloring"),filter_stations:document.getElementById("btn_filter_stations"),remove_filter:document.getElementById("btn_remove_filter"),add_plots:document.getElementById("btn_add_plots")},L.Icon.Default.prototype.options.imagePath=location.origin,L.Icon.Default.prototype.options.shadowUrl="/static/klimzuk/img/Leaflet-Marker-shadow.png",this.IconDefault=L.Icon.Default.extend({options:{iconUrl:"/static/klimzuk/img/marker-icon-blue.png"}}),this.IconUnselect=L.Icon.Default.extend({options:{iconUrl:"/static/klimzuk/img/marker-icon-red.png"}}),this.IconSelect=L.Icon.Default.extend({options:{iconUrl:"/static/klimzuk/img/marker-icon-green.png"}}),this.coloring_active=!1,this.filtering_active=!1,this.legend=new(L.Control.extend({onAdd:map=>{let div=L.DomUtil.create("div","legend container-fluid");div.innerHTML="<h3>Legend</h3>";let icons=[this.IconSelect,this.IconUnselect],names=["selected","not select"];for(let i=0;i<2;i++){let row=L.DomUtil.create("div","row justify-content-right"),col_icon=L.DomUtil.create("div","col-auto pr-0"),icon_img=(new icons[i]).createIcon();icon_img.style="",icon_img.classList+="img-fluid marker-legend ",col_icon.appendChild(icon_img),row.appendChild(col_icon);let col_text=L.DomUtil.create("div","col");col_text.innerHTML+=`<b>${names[i]}</b>`,row.appendChild(col_text),div.appendChild(row)}return div}})),this.create_basemap(),this.load_stations_to_map(),this.station_data={}}addButonEventListeners(){this.buttons.color_selection.addEventListener("click",event=>{this.apply_coloring(),event.target.textContent="Update Coloring",this.buttons.remove_coloring.classList.remove("invisible")}),this.buttons.remove_coloring.addEventListener("click",event=>{this.remove_coloring(),this.buttons.color_selection.textContent="Color Selection",event.target.classList.add("invisible")}),this.buttons.filter_stations.addEventListener("click",event=>{this.apply_filter(),event.target.textContent="Update Filter",this.buttons.remove_filter.classList.remove("invisible")}),this.buttons.remove_filter.addEventListener("click",event=>{this.remove_filter(),this.buttons.filter_stations.textContent="Filter Selection",event.target.classList.add("invisible")}),this.buttons.add_plots.addEventListener("click",event=>{this.add_plots(),event.target.value="add new plots"})}addInputEventListeners(){this.input_stids.dom_input.addEventListener("change",e=>{this.check_stations_input(),this.update_coloring(),this.update_filter()})}addEventListeners(){this.addButonEventListeners(),this.addInputEventListeners()}create_basemap(){this.map=L.map(document.getElementById("map")).setView([51.351,10.459],6),L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',maxZoom:20,tilesextent:[7.5,47.27,10.5,55.06]}).addTo(this.map),this.map_scale=L.control.scale(),this.map_scale.addTo(this.map)}get_stations_meta(){this.stations_meta=JSON.parse(document.getElementById("stations_meta").textContent),this.station_ids=[];for(let feature of this.stations_meta.features)this.station_ids.push(feature.properties.pk)}get_station_data(stat_id){if(stat_id in this.station_data)return this.station_data[stat_id];$.ajax}load_stations_to_map(filter=(feature=>!0)){if(null!=this.lmarkers&&this.lmarkers.clearLayers(),this.lmarkers=L.markerClusterGroup(),this.lmarkers.addLayer(L.geoJSON(this.stations_meta,{filter:filter})),this.lmarkers=this.lmarkers.bindPopup(layer=>{let props=layer.feature.properties,stid=layer.feature.properties.pk,str_select=this.is_selected(stid)?"unselect":"select",str;return`<div class="container gx-0 pb-2" id="popup_stid_${stid}">                    <h6 style="float: left">${stid}</h6><br>                    <table>                    <tr><td><b>Name:</b></td><td> ${props.name}</td><br>                    <tr><td><b>Betreiber:</b></td><td> ${props.operator}</td>                    </tr></table></div>                    <div class="container gx-0"><div class="row justify-content-center"><div class="col">                        <button class="btn btn-primary rm-3" onclick="button_select_station('${stid}', event)"                             data-toggle="tooltip" data-placement="top" data-container="body" data-trigger="hover"                            title="Add this station to the selected stations list on the right">${str_select}</button></div><div class="col gx-0">                        <a class="btn btn-primary" href="/static/klimzuk/PDF/A4_Ann_Trends_${stid}.pdf" download style="color:#FFFFFF"                             data-toggle="tooltip" data-placement="top" data-container="body" data-trigger="hover"                             title="Download all the plots for this station as PDF."><i class="bi bi-download"></i></a>                    </div></div></div>`},{minWidth:130}),this.lmarkers.on("click",()=>{$('.leaflet-popup-content [data-toggle="tooltip"]').tooltip()}),this.lmarkers.getLayers().forEach(layer=>{layer.setIcon(new this.IconDefault)}),this.lmarkers.addTo(this.map),this.lmarkers.getLayers().length>1)this.map.fitBounds(this.lmarkers.getBounds(),{padding:[1,1]});else if(1==this.lmarkers.getLayers().length){let markerBounds=L.latLngBounds([this.lmarkers.getLayers()[0].getLatLng()]);this.map.fitBounds(markerBounds.pad(2),{padding:[1,1]})}this.markers={},this.lmarkers.getLayers().forEach(layer=>{this.markers[layer.feature.properties.pk]=layer}),this.coloring_active&&this.apply_coloring()}apply_coloring(){this.coloring_active=!0;let selected_stids=this.get_selected_stations();this.lmarkers.getLayers().forEach(layer=>{selected_stids.includes(layer.feature.properties.pk)?layer.setIcon(new this.IconSelect):layer.setIcon(new this.IconUnselect)}),this.legend.addTo(this.map)}remove_coloring(){this.coloring_active=!1,this.lmarkers.getLayers().forEach(layer=>{layer.setIcon(new this.IconDefault)}),this.legend.remove()}update_coloring(){this.coloring_active&&this.apply_coloring()}apply_filter(){let selected_stids=this.get_selected_stations();this.filtering_active=!0;let filter_stids=feature=>!1;selected_stids.length>0&&(filter_stids=feature=>selected_stids.includes(feature.properties.pk));let filter=feature=>filter_stids(feature);this.load_stations_to_map(filter=filter)}remove_filter(){this.load_stations_to_map(),this.filtering_active=!1}update_filter(){this.filtering_active&&this.apply_filter()}add_plot(stid,para,period){add_plot(stid,para,period)}add_plots(){let paras=this.get_paras(),periods=this.get_periods(),stids;this.get_selected_stations().forEach(stid=>{paras.forEach(para=>{periods.forEach(period=>{this.add_plot(stid=stid,para=para,period=period)})})})}get_selected_stations(){let stids=this.input_stids.get_value().split(",").map(el=>el.trim());return 1==stids.length&""==stids[0]?[]:stids}get_periods(){return this.input_period.get_value()}get_paras(){return this.input_para.get_value()}is_selected(stid){return this.get_selected_stations().includes(stid)}select_station(stid){this.check_stid(stid)&&!this.get_selected_stations().includes(stid)&&(0==this.input_stids.get_value().length?this.input_stids.dom_input.value=stid:this.input_stids.dom_input.value+=", "+stid,this.update_coloring(),this.update_filter())}unselect_station(stid){let selected_stids=this.get_selected_stations();selected_stids.includes(stid)&&(selected_stids.pop(stid),this.input_stids.dom_input.value=", ".join(selected_stids),this.update_coloring(),this.update_filter())}check_stid(stid){return this.station_ids.includes(stid)}check_stations_input(){this.input_stids.make_valid();let in_text=this.input_stids.get_value();if(0==in_text.length)return this.input_stids.make_invalid("You didn't select any station. Please enter a comma-seperated list of station IDs."),!1;if(!/^\s*\w+_(\d{1,5})\s*([,;]{1}\s*\w+_\d{1,5})*[\s,;]$/.test(in_text))return this.input_stids.make_invalid("The given list of stations is not in the right pattern.<br>The Station Ids must be provided as a comma or semmicolon seperated list of IDs."),!1;let in_stids=in_text.trim().replaceAll(";",",").replaceAll(/[,\s]+$/gm,"").split(",").map(el=>el.trim());in_stids=Array.from(new Set(in_stids));let valid_stids=[],invalid_stids=[];for(let stid of in_stids)this.check_stid(stid)?valid_stids.push(stid):invalid_stids.push(stid);return invalid_stids.length>0&&this.input_stids.make_invalid("The following Station Ids are not valid and should get removed: <br>"+invalid_stids.join(", ")),this.input_stids.dom_input.value=in_stids.join(", "),this.get_selected_stations().length>10&&this.input_stids.make_invalid("You are only able to select 10 stations at once. If you want to see more station plots please select them in batches. This means, adding 10 plots and then delete your selection and create a new one. Then add those stations plots."),this.input_stids.is_valid()}}const klimzukmap=new KlimZukMap;let button_select_station=(stid,event)=>{"select"==event.target.innerText?(klimzukmap.select_station(stid),event.target.innerText="unselect"):(klimzukmap.unselect_station(stid),event.target.innerText="select")};klimzukmap.addEventListeners();